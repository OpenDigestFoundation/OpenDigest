**解决的问题：**
编程语言的结构和语法固有的刚性与自然语言的流动性语义不同，现有的代码漏洞检测的微调方法通常将代码视为长文本序列，剥离了诸如换行符和空格等结构元素。这种方法无意中导致了关键结构信息的丢失，降低了代码的独特特征，影响了漏洞检测的准确性。

**解决方法：**
提出了一种基于预训练代码模型的新型网络架构方法，该方法引入了结构信息感知。提出了一种增强的代码文本处理工作流程，在建模之前保留结构元素。这种改进允许模型在建模过程中保留和利用行级结构信息和语义信息。此外，引入了一种新的网络架构，即通过行级语义学习感知代码结构的网络（CSLS），它整合了三个关键组件：全局漏洞意识、行结构意识和敏感行意识。

**实验结果：**
使用来自现实世界项目的漏洞检测数据集进行了全面的实验。在现实世界项目的漏洞检测数据集上进行了广泛的实验。结果表明，新的代码预处理流程显著提高了现有基线（例如，在应用于流行的模型如CoderBert和UniXcoder时，Devign数据集的准确率提高了3%）。所提出的网络架构在检测漏洞方面也显示出更高的准确性，超过了新建立的基准。这些发现强调了结构信息在提高代码漏洞检测模型效果中的重要性。