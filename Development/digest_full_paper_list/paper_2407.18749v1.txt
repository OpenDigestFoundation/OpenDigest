**summary**: 这篇文章探讨了多机器人系统（MRS）的设计复杂性问题。作者提出了一种基于系统建模语言（SysML）和业务流程模型和符号（BPMN）的模块化建模和仿真技术，以降低MRS设计中的复杂性。

文章中提出的方法包括使用SysML和BPMN这两种形式化的架构描述语言（ADLs）来设计系统蓝图，并通过Java代理开发环境（JADE）中间件实现多智能体环境，以模拟MRS蓝图。这种方法允许设计概念从一种编程语言转换到另一种，实现技术无关性。

与现有工作相比，这种方法的进步在于它提供了一种模型驱动的开发途径，利用系统模型作为主要的软件工件，并且基于V模型，这是解决复杂系统如MRS的事实上的解决方案。这种方法还允许在设计阶段通过模拟来验证不同的架构设计模式，并通过系统性能指标进行评估。

文章对领域内的潜在未来影响包括提供了一种可以跨不同系统案例研究转移解决方案概念的形式化通用ADLs，以及定义了一组可以在模拟运行时量化系统性能的MRS性能要求。这些标准模型可以轻松地在任何支持分布式系统实现的编程环境中编码，例如JADE、机器人操作系统（ROS）或Web服务（WS）。此外，文章还提出了未来工作的方向，包括编写代码生成器以自动生成实现代码，以及将模拟作为实时数字孪生在实施阶段使用，以提前检查不同的规划和调度算法。这可能会显著减少编码时间和工作量，提高系统的可读性和可维护性。
**related work**: 根据提供的文章内容，以下是文章中提到的一些重点相关工作：

（Sadik, Goerick, 2019）Modeling and simulation of a multi-robot system architecture: 这篇文章扩展了在2019年国际机电一体化、机器人和系统工程会议（MoRSE）上展示的工作，涉及多机器人系统架构的建模和仿真。

（Goerick, 2010）Towards an understanding of hierarchical architectures: 这篇工作可能讨论了层次化架构的理解，与多机器人系统的架构设计相关。

（Parker, 2003）Current research in multirobot systems: 这篇工作可能概述了多机器人系统的当前研究，为多机器人系统的设计和实现提供了背景。

（Alami, 2005）Multi-robot cooperation: Architectures and paradigms: 这篇工作可能讨论了多机器人合作的架构和范式，为多机器人系统的设计提供了理论基础。

（Jawhar, Mohamed, Wu, Al-Jaroodi, 2018）Networking of Multi-Robot Systems: Architectures and Requirements: 这篇文章可能探讨了多机器人系统的网络化，包括所需的架构和要求，为多机器人系统通信和协作提供了指导。

（INCOSE SEH Working Group, 2011）Incose Systems Engineering Handbook: 虽然不是特定的研究工作，但这本手册可能为系统工程实践提供了指导，对多机器人系统的设计有指导意义。

（Bass, Clements, Kazman, 2012）Software architecture in practice: 这篇工作可能讨论了软件架构在实践中的应用，对多机器人系统的软件设计有影响。

（Holt, Perry, 2008）SysML for systems engineering: 这篇工作可能介绍了SysML在系统工程中的应用，对使用SysML进行多机器人系统建模有直接影响。

（Friedenthal, Moore, Steiner, 2014）A practical guide to SysML: the systems modeling language: 这本书可能提供了SysML语言的实用指南，对多机器人系统建模实践有指导作用。

（Jennings, Wooldridge, 1998）Agent technology: 这篇工作可能介绍了代理技术，对多机器人系统中智能体的设计和实现有影响。

请注意，由于文章内容的限制，这些工作的具体内容和影响可能需要进一步查阅原始文献来详细了解。
**approach**: 这篇文章的核心方法是使用系统建模语言（SysML）和业务流程模型和符号（BPMN）来设计多机器人系统（MRS）的架构，并利用Java代理开发环境（JADE）进行模拟和性能评估。下面是结合文章内容对核心方法的详细解释：

1. **系统建模语言（SysML）**：SysML是从统一建模语言（UML）衍生出来的一种通用建模语言，它被用来设计和描述复杂工业系统的架构。文章中使用SysML来定义MRS的组件和它们之间的交互。SysML的图包括块定义图、内部块图、用例图等，这些图帮助设计者构建系统的蓝图。

2. **业务流程模型和符号（BPMN）**：BPMN是一种用于建模业务流程的图形化语言，它扩展了UML活动图的符号、语义和语法。文章中使用BPMN来实现MRS的活动图，因为它提供了更详细的流程控制，如不同的网关符号（exclusive-OR, inclusive-OR, parallel-AND）来表示流程的分支和合并逻辑。

3. **Java代理开发环境（JADE）**：JADE是一个多代理系统（MAS）中间件，用于部署和模拟MRS的架构。在JADE中，每个系统实体（如请求管理器、规划器和机器人管理器）都被实现为一个代理，并通过FIPA-ACL（代理通信语言）进行通信。

4. **性能评估**：文章定义了一系列定量指标来评估MRS的性能，包括吞吐量（Throughput）、延迟（Latency）、成功率（Success rate）、失败率（Failure rate）和效率（Efficiency）。这些指标帮助设计者理解系统在模拟运行时的表现。

5. **模拟和决策制定**：文章通过BPMN活动图展示了请求管理器（RqM）、规划器（PLN）和机器人管理器（RbM）的决策制定模型。例如，RqM如何根据先进先出（FCFS）技术调度请求，PLN如何根据机器人的可用性和能力历史来构建经过验证的计划（Pv），以及RbM如何分配任务并监控机器人的反馈。

6. **模拟场景**：文章通过JADE创建了一个模拟场景，其中包括了请求管理器、规划器和机器人管理器的用户界面（GUI），以及它们之间的交互序列图。这个模拟场景允许设计者在设计阶段就对MRS的性能进行评估。

文章中没有提供具体的算法公式，但是通过使用SysML和BPMN进行建模，以及JADE进行模拟，设计者能够对MRS的架构进行形式化的设计和评估。这种方法允许设计者在技术实现之前，就能够对系统的性能和行为有一个深入的理解。
**experiment**: 文章中的实验数据对比说明了多机器人系统（MRS）在模拟运行时的性能表现。以下是一些关键的实验结果和分析：

1. **处理的请求数量（Processed requests）**：
   - 图15-a显示了请求管理器（RqM）处理的请求数量。这直接反映了系统的吞吐量。

2. **未处理的请求数量（Unprocessed requests）**：
   - 图15-b展示了未处理请求的数量，这可以反映系统的延迟情况。

3. **成功请求的数量（Successful requests）**：
   - 图15-c显示了成功执行的请求数量，这有助于计算系统的成功率。

4. **失败请求的数量（Failed requests）**：
   - 图15-d展示了失败的请求数量，这有助于计算系统的失败率。

5. **延迟（Latency）**：
   - 图15-e展示了从请求到达到开始执行请求所需的时间（延迟）。较短的延迟意味着更好的性能。

6. **效率（Efficiency）**：
   - 图15-f展示了系统的效率，这是通过成功请求的数量除以失败请求的数量计算得出的。效率值大于1表示成功请求的数量多于失败请求。

7. **机器人状态和任务历史（Robots States & Robots tasks history）**：
   - 图16-a和16-b展示了机器人的可用性和任务历史的变化，这有助于分析任务分配的平衡性。

8. **机器人的可用性、利用率和有效性（Robots availability, utilization, and effectiveness）**：
   - 表2提供了机器人的可用性、利用率和有效性的统计数据。例如，R3在模拟运行期间是最被利用和可用的机器人，因此与R1和R2相比，R3最为有效。

9. **任务分配平衡**：
   - 文章中提到，在模拟的第6分钟，任务在可用机器人之间的分布趋于每台机器人6个任务，然后在第19分钟时，任务分布再次平衡，每台机器人大约有20个任务。

这些结果表明，所提出的MRS设计能够在模拟环境中有效地处理请求，并且在一定程度上保持了任务分配的平衡。系统的效率在模拟运行期间保持在1或以上，表明成功执行的请求至少与失败的请求一样多。此外，通过监控和调整机器人的任务分配，系统能够适应机器人可用性的变化，从而优化整体性能。
**impact**: 这篇文章提出的多机器人系统（MRS）架构设计方法和模拟评估技术，对这一领域可能产生以下影响：

1. **设计方法标准化**：通过使用SysML和BPMN这两种标准化的建模语言，文章为多机器人系统的架构设计提供了一种结构化和正式的方法。这有助于提高设计过程的一致性和可重复性。

2. **跨领域应用**：所提出的方法和技术的通用性意味着它们可以应用于不同的领域和案例研究，不仅限于特定的技术实现，从而促进跨学科的创新和集成。

3. **性能评估的定量化**：文章定义了一组定量的性能指标，这有助于更精确地评估和比较不同多机器人系统的性能，为系统优化提供了依据。

4. **模型驱动的开发**：通过强调模型在软件开发过程中的核心作用，文章推动了模型驱动开发（MDD）在机器人领域的应用，这可能会减少编码时间，提高系统的可读性和可维护性。

5. **技术无关性**：由于设计概念可以在不同编程语言和技术之间转移，这为多机器人系统的技术选择和集成提供了更大的灵活性。

6. **实时数字孪生的应用**：文章提出在实施阶段使用模拟作为实时数字孪生的概念，这可以用于预测不同规划和调度算法的表现，从而在实际部署之前进行更有效的决策。

7. **教育和培训**：文章中的方法和案例可以作为教育和培训材料，帮助学生和专业人士更好地理解多机器人系统的复杂性及其设计原则。

8. **研究和开发工作的新方向**：提出的架构和评估方法可能会激发新的研究思路，例如开发自动化代码生成器，以及探索新的多机器人系统应用场景。

9. **行业实践的影响**：文章中提出的设计和评估方法可能会影响行业实践，特别是在需要高度自动化和智能化的领域，如制造业、物流和服务业。

10. **促进开源和共享**：如果这些方法和工具被开发成开源软件，它们可以促进知识共享，加速多机器人技术的发展和普及。